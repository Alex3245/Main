---
- name: upgrade all packages
  yum:
    name: '*'
    state: latest

- name: copy /etc/yum.repos.d/nginx.repo (Centos)
  ansible.builtin.template:
    src: yum.repos.d/nginx.repo
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: '0644'
  when: ansible_facts['distribution'] == "CentOS" 

- name: tasks for CentOS7
  block: 

    - name: install nginx (Centos7)
      yum:
        name: nginx

    - name: install postgresql (Centos7)
      yum:
        name:
          - postgresql
          - postgresql-server

    - name: install epel-release (Centos7)
      yum:
        name: epel-release

  vars:
    ansible_python_interpreter: /usr/bin/python2
  when: ansible_facts['distribution_major_version'] == "7"

- name: tasks for CentOS8
  block: 

    - name: install nginx (Centos8)
      yum:
        name: nginx

    - name: install postgresql (Centos8)
      yum:
        name: 
          - postgresql 
          - postgresql-server

    - name: install epel-release (Centos8)
      yum:
        name: epel-release

  when: ansible_facts['distribution_major_version'] == "8"

- name: copy /etc/nginx/nginx.conf
  ansible.builtin.copy:
    src: nginx/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'

- name: initdb
  ansible.builtin.shell:
    cmd: service postgresql initdb

- name: chkconfig
  ansible.builtin.shell:
    cmd: chkconfig postgresql on

- name: copy /var/lib/pgsql/data/pg_hba.conf
  ansible.builtin.copy:
    src: pgsql/data/pg_hba.conf
    dest: /var/lib/pgsql/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'

- name: sleep 30 sec
  ansible.builtin.wait_for:
    timeout: 30

- name: restart service postgresql
  ansible.builtin.service:
    name: postgresql
    state: restarted

- name: create db
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "CREATE DATABASE r7office;"

- name: create user in postgresql
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "CREATE USER r7office WITH password 'r7office';"

- name: add privileges
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "GRANT ALL privileges ON DATABASE r7office TO r7office;"

- name: install redis (Centos7)
  yum:
    name: redis
  vars:
    ansible_python_interpreter: /usr/bin/python2
  when: ansible_facts['distribution_major_version'] == "7"

- name: install redis (Centos8)
  yum:
    name: redis
  when: ansible_facts['distribution_major_version'] == "8"

- name: start service redis
  ansible.builtin.service:
    name: redis
    state: started
    enabled: yes

- name: install erlang and rabbitmq (Centos8)
  block:
    - name: dowload and install rpm for erlang (Centos8)
      ansible.builtin.shell:
        cmd: curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | sudo bash

    - name: clean all (Centos8)
      ansible.builtin.shell:
        cmd: yum clean all

    - name: makecache (Centos8)
      ansible.builtin.shell:
        cmd: yum -y makecache

    - name: install erlang (Centos8)
      yum:
        name: erlang

    - name: wget script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: wget -O /tmp/script.rpm.sh https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh
      
    - name: chmod 777 script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: chmod 777 /tmp/script.rpm.sh

    - name: run script.rpm.sh (Centos8)
      ansible.builtin.shell:
        cmd: /tmp/script.rpm.sh

  when: ansible_facts['distribution_major_version'] == "8"

- name: install rabbitmq-server (Centos7)
  yum:
    name: rabbitmq-server
  vars:
    ansible_python_interpreter: /usr/bin/python2
  when: ansible_facts['distribution_major_version'] == "7"

- name: install rabbitmq-server (Centos8)
  yum:
    name: rabbitmq-server
  when: ansible_facts['distribution_major_version'] == "8"

- name: start service rabbitmq
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: yes

- name: install ds
  ansible.builtin.shell:
    cmd: sudo yum localinstall https://download.r7-office.ru/centos/r7-office-documentserver-ee.x86_64.rpm -y

- name: copy /usr/bin/documentserver-configure.sh
  ansible.builtin.template:
    src: usr/bin/documentserver-configure.sh.j2
    dest: /usr/bin/documentserver-configure.sh
    owner: root
    group: root
    mode: '0744'

- name: started supervisord 
  ansible.builtin.service:
    name: supervisord
    state: started
    enabled: yes  

- name: started nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: yes

- name: run documentserver-configure.sh
  ansible.builtin.shell:
    cmd: bash documentserver-configure.sh

- name: install firewalld (Centos8)
  block: 

    - name: install firewalld
      ansible.builtin.package:
        name: firewalld

    - name: restart service firewalld
      ansible.builtin.service:
        name: firewalld
        state: started
        enabled: yes

  when: ansible_facts['distribution_major_version'] == "8"

- name: setup firewalld
  block:

    - name: add-port=80/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port=80/tcp --permanent

    - name: add-port=443/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port=443/tcp --permanent

    - name: add-port="{{ ansible_port }}"/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port="{{ ansible_port }}"/tcp --permanent

    - name: firewall reload
      ansible.builtin.shell:
        cmd: firewall-cmd --reload

  ignore_errors: yes
