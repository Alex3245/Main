---
- name: upgrade all packages
  yum:
    name: '*'
    state: latest

- name: tasks for RedOS7.1-2
  block:

    - name: copy /etc/yum.repos.d/nginx.repo (RedOS7.2)
      ansible.builtin.copy:
        src: yum.repos.d/nginx.repo7
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: '0644'
      when: ansible_facts['distribution_version'] == "7.2"

    - name: install ca-certificates (RedOS7.1-2)
      yum:
        name: ca-certificates
        state: present

    - name: install nginx (RedOS7.1-2)
      yum:
        name: nginx
        update_cache: yes
        state: present

    - name: install postgresql ((RedOS7.1-2))
      yum:
        name:
          - postgresql
          - postgresql-server
        state: present

  vars:
    ansible_python_interpreter: /usr/bin/python2
  when: ansible_facts['distribution_version'] == "7.2" or 
        ansible_facts['distribution_version'] == "7.1"

- name: tasks for RedOS7.3
  block:

    - name: copy /etc/yum.repos.d/nginx.repo (RedOS7.3)
      ansible.builtin.copy:
        src: yum.repos.d/nginx.repo8
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: '0644'

    - name: install nginx (RedOS7.3)
      yum:
        name: nginx
        state: present

    - name: install postgresql (RedOS7.3)
      yum:
        name: 
          - postgresql 
          - postgresql-server
        state: present

  when: "'7.3' in ansible_facts['distribution_version']"

- name: copy to /etc/nginx/nginx.conf
  ansible.builtin.copy:
    src: nginx/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'

- name: recursively remove directory
  ansible.builtin.file:
    path: /var/lib/pgsql/data
    state: absent

- name: initdb
  ansible.builtin.shell:
    cmd: service postgresql initdb

- name: copy /var/lib/pgsql/data/pg_hba.conf
  ansible.builtin.copy:
    src: pgsql/data/pg_hba.conf
    dest: /var/lib/pgsql/data/pg_hba.conf
    owner: postgres
    group: postgres
    mode: '0600'

- name: sleep for 30 sec
  ansible.builtin.wait_for:
    timeout: 30

- name: restart service postgresql
  ansible.builtin.service:
    name: postgresql
    state: restarted
    enabled: yes

- name: create db
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "CREATE DATABASE r7office;"

- name: create user in postgresql
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "CREATE USER r7office WITH password 'r7office';"

- name: add privileges
  ansible.builtin.shell:
    cmd: sudo -u postgres psql -c "GRANT ALL privileges ON DATABASE r7office TO r7office;"

- name: tasks for RedOS7.1-2
  block:

    - name: install redis (RedOS7.1-2)
      yum:
        name: redis
        state: present

    - name: install rabbitmq-server (RedOS7.1-2)
      yum:
        name: rabbitmq-server
        state: present
  vars:
    ansible_python_interpreter: /usr/bin/python2
  when: ansible_facts['distribution_version'] == "7.2" or 
        ansible_facts['distribution_version'] == "7.1"

- name: tasks for RedOS7.3
  block:

    - name: install redis (RedOS7.3)
      ansible.builtin.package:
        name: redis
        state: present

    - name: install rabbitmq-server (RedOS7.3)
      ansible.builtin.package:
        name: rabbitmq-server
        state: present

  when: "'7.3' in ansible_facts['distribution_version']"

- name: restart service redis
  ansible.builtin.service:
    name: redis
    state: started
    enabled: yes

- name: restart service rabbitmq
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: yes

- name: install ds
  ansible.builtin.shell:
    cmd: sudo yum localinstall https://download.r7-office.ru/centos/r7-office-documentserver-ee.x86_64.rpm -y

#- name: copy /usr/bin/documentserver-configure.sh
#  ansible.builtin.template:
#    src: usr/bin/documentserver-configure.sh.j2
#    dest: /usr/bin/documentserver-configure.sh
#    owner: root
#    group: root
#    mode: '0744'

- name: started supervisord 
  ansible.builtin.service:
    name: supervisord
    state: started
    enabled: yes

- name: started nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: yes

#- name: run documentserver-configure.sh
#  ansible.builtin.shell:
#    cmd: bash documentserver-configure.sh

- name: setup firewalld
  block:

    - name: add-port=80/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port=80/tcp --permanent

    - name: add-port=443/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port=443/tcp --permanent

    - name: add-port=2235/tcp
      ansible.builtin.shell:
        cmd: firewall-cmd --zone=public --add-port="{{ ansible_port }}"/tcp --permanent

    - name: firewall reload
      ansible.builtin.shell:
        cmd: firewall-cmd --reload

  ignore_errors: yes
